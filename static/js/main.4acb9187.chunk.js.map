{"version":3,"sources":["App/App.styled.jsx","Form/Form.styled.jsx","Form/Form.jsx","Filter/Filter.jsx","Contacts/ContactItem.jsx","Contacts/Contacts.styled.jsx","Contacts/ContactsList.jsx","App/App.jsx","index.js"],"names":["Heading","styled","h1","Title","h2","Form","form","Input","input","Label","label","AddButton","button","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","onSubmit","preventDefault","props","onSubmitForm","reset","console","log","this","type","pattern","title","required","onChange","Component","Filter","ContactItem","ul","ContactsList","contacts","map","id","App","filter","handleSubmit","contact","shortid","generate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGaA,EAAUC,IAAOC,GAAV,8CAOPC,EAAQF,IAAOG,GAAV,0C,QCRLC,EAAOJ,IAAOK,KAAV,0KAUJC,EAAQN,IAAOO,MAAV,oGAQLC,EAAQR,IAAOS,MAAV,6DAKLC,EAAYV,IAAOW,OAAV,qL,OCnBTC,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,OAAQ,IAHZ,EAMEC,aAAe,SAACC,GACd,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAEKN,EAAOK,KAVhB,EAeEE,SAAW,SAACJ,GACVA,EAAEK,iBACF,EAAKC,MAAMC,aAAa,EAAKX,OAC7B,EAAKY,SAlBT,EAqBEA,MAAQ,WACN,EAAKL,SAAS,CACZN,KAAM,IACNC,OAAQ,MAEVW,QAAQC,IAAI,UA1BhB,4CA6BE,WACG,OACD,eAACvB,EAAD,CAAMiB,SAAUO,KAAKP,SAArB,UACI,eAACb,EAAD,kBACE,cAACF,EAAD,CACEuB,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,kcACLC,UAAQ,EACTb,MAASS,KAAKf,MAAMC,KACpBmB,SAAYL,KAAKZ,kBAIrB,eAACR,EAAD,oBACE,cAACF,EAAD,CACEuB,KAAK,MACLf,KAAK,SACLgB,QAAQ,yFACRC,MAAM,giBACLC,UAAQ,EACTb,MAASS,KAAKf,MAAME,OACpBkB,SAAYL,KAAKZ,kBAIrB,cAACN,EAAD,CACEmB,KAAK,SADP,gCAxDR,GAAiCK,aCDlB,SAASC,IAEtB,OACE,gCACE,sDACA,gCACE,uBAAON,KAAK,cCPL,SAASO,EAAT,GAAsC,IAAhBtB,EAAe,EAAfA,KAAMC,EAAS,EAATA,OACzC,OACE,qCACI,4BAAID,IACJ,+BAAOC,OCNSf,IAAOqC,GAAV,yCCMN,SAASC,EAAT,GAAmC,IAAZC,EAAW,EAAXA,SAGpC,OADAb,QAAQC,IAAIY,GAEV,6BACGA,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAI3B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,6BACE,cAACqB,EAAD,CACEtB,KAAQA,EACRC,OAAQA,KAHH0B,Q,ICHXC,E,4MACF7B,MAAQ,CACR0B,SAAU,CACR,CAACE,GAAI,OAAQ3B,KAAM,gBAAiBC,OAAQ,aAC5C,CAAC0B,GAAI,OAAQ3B,KAAM,iBAAkBC,OAAQ,aAC7C,CAAC0B,GAAI,OAAQ3B,KAAM,gBAAiBC,OAAQ,aAC5C,CAAC0B,GAAI,OAAQ3B,KAAM,iBAAkBC,OAAQ,cAE/C4B,OAAQ,I,EAGVC,aAAe,YAAqB,IAAnB9B,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OAGf8B,EAAU,CACd/B,OACA2B,GAJSK,IAAQC,WAKjBhC,UAGF,EAAKK,SACH,CACImB,SAAS,CAAEM,GAAH,mBAAe,EAAKhC,MAAM0B,c,4CAS1C,WACE,OACE,gCACE,cAACxC,EAAD,wBAEA,cAAC,EAAD,CACEyB,aAAcI,KAAKgB,eAGrB,cAAC1C,EAAD,CAAO2B,KAAO,OAAd,sBACA,cAACM,EAAD,IACA,cAACG,EAAD,CAAcC,SAAUX,KAAKf,MAAM0B,kB,GA1CzBL,aAiDHQ,ICvDfM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4acb9187.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\n\nexport const Heading = styled.h1`\nfont-size: 24px;\n`\n\n\n\n\nexport const Title = styled.h2`\n  margin: 0;\n`","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\nmargin-left: 20px;\nmargin-top: 20px;\nwidth: 400px;\ndisplay: flex;\nflex-direction: column;\n\nborder: solid red 1px;\nborder-radius: 5px;\n`\nexport const Input = styled.input`\nfont-size: 20px;\nwidth: 300px;\nheight: 50px;\nborder-radius: 5 px;\n\n`\n\nexport const Label = styled.label`\nfont-size: 20px;\ncolor: green;\n`\n\nexport const AddButton = styled.button`\nwidth: 150px;\nheight: 50px;\nborder-radius: 5px;\n\ncursor: pointer;\nbackground-color: lightblue;\n\n&:hover, &:focus {\n  background-color: blue;\n}\n`","import { Component } from \"react\"\n// import PropTypes from 'prop-types';\n\nimport {Form, Input, Label, AddButton} from './Form.styled';\n\n\nexport class ContactForm extends Component {\n  state = {\n    name: '',\n    number: ''\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState(\n      {\n        [name]: value\n      }\n    );\n  }\n    \n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmitForm(this.state);\n    this.reset();\n  }\n\n  reset = () => {\n    this.setState({\n      name: \" \",\n      number: \" \"\n    });\n    console.log('hello');\n  }\n\n  render() {\n     return (\n    <Form onSubmit={this.onSubmit}>\n        <Label>Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n             required\n            value = {this.state.name}\n            onChange = {this.handleChange}\n            />\n        </Label>\n\n        <Label>Number\n          <Input \n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n             required\n            value = {this.state.number}\n            onChange = {this.handleChange}\n          />\n        </Label>\n\n        <AddButton\n          type='submit'\n          >Add contact\n        </AddButton>\n        </Form>\n  )\n  }\n \n}\n\n","import React from \"react\";\n// import PropTypes from 'prop-types';\n\nimport { } from './Filter.styled';\n\nexport default function Filter() {\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <label>\n        <input type=\"text\"/>\n      </label>\n    </div>\n\n  )\n}\n\n// Filter.propTypes = {\n\n// }","import React from \"react\";\n// import PropTypes from 'prop-types';\n\n\nexport default function ContactItem({name, number}) {\n  return (\n    <>\n        <p>{name}</p>\n        <span>{number}</span>\n    </>\n  )\n}\n\n// ContactItem.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired\n// }\n","import styled from \"@emotion/styled\";\n\nexport const Contacts = styled.ul`\npadding: 0;\n`","import 'normalize.css';\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport ContactItem from \"./ContactItem\";\nimport {} from './Contacts.styled';\n\nexport default function ContactsList({contacts}) {\n\n  console.log(contacts);\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) =>\n        <li key={id}>\n          <ContactItem \n            name = {name}\n            number={number}\n          />\n        </li>)\n      }\n    </ul>\n  )\n}\n\nContactsList.propTypes = {\n  number: PropTypes.arrayOf(PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n  })),\n};","import 'normalize.css';\nimport '../index.css';\nimport shortid from \"shortid\";\n\nimport { Component } from \"react\";\n\nimport { Heading, Title } from './App.styled';\nimport { ContactForm } from '../Form/Form';\nimport Filter from '../Filter/Filter';\nimport ContactsList from '../Contacts/ContactsList';\n\nclass App extends Component {\n    state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: ''\n  }\n  \n  handleSubmit = ({name, number}) => {\n    const id = shortid.generate();\n   \n    const contact = {\n      name,\n      id,\n      number\n    }\n    \n    this.setState(\n      {\n          contacts: [contact, ...this.state.contacts]\n      })\n  }\n\n  // filterContactsByName = (e) => {   \n  //   this.setState({filter: e.currentTarget.value})\n  // }\n\n \n  render() {\n    return (\n      <div>\n        <Heading>PhoneBook</Heading>\n\n        <ContactForm\n          onSubmitForm={this.handleSubmit}\n          // onInput={() => {this.filterContactsByName()}}\n        />\n        <Title type = 'text'>Contacts</Title>\n        <Filter/>\n        <ContactsList contacts={this.state.contacts}/>\n\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}